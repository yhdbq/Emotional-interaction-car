# Copyright (C) 2021-2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

if (defined(ohos_lite)) {
  import("//build/lite/config/component/lite_component.gni")
} else {
  import("//build/ohos.gni")
}

local_base_sources = [
  "common/wifi_hal_common_func.c",
  "main.c",
  "wifi_hal_adapter.c",
  "wifi_hal_ap_interface.c",
  "wifi_hal_base_interface.c",
  "wifi_hal_callback.c",
  "wifi_hal_chip_interface.c",
  "wifi_hal_crpc_ap.c",
  "wifi_hal_crpc_base.c",
  "wifi_hal_crpc_chip.c",
  "wifi_hal_crpc_common.c",
  "wifi_hal_crpc_p2p.c",
  "wifi_hal_crpc_server.c",
  "wifi_hal_crpc_sta.c",
  "wifi_hal_crpc_supplicant.c",
  "wifi_hal_module/hostapd_hal/wifi_hostapd_hal.c",
  "wifi_hal_module/wpa_supplicant_hal/wifi_wpa_common.c",
  "wifi_hal_module/wpa_supplicant_hal/wifi_wpa_hal.c",
  "wifi_hal_module/wpa_supplicant_hal/wpa_p2p_hal/wifi_p2p_hal.c",
  "wifi_hal_module/wpa_supplicant_hal/wpa_sta_hal/wifi_supplicant_hal.c",
  "wifi_hal_module_manage.c",
  "wifi_hal_p2p_interface.c",
  "wifi_hal_sta_interface.c",
  "wifi_hal_vendor_interface.c",
]

local_base_include_dirs = [
  "//foundation/communication/wifi/interfaces/innerkits/native_cpp/wifi_standard/interfaces",
  "//foundation/communication/wifi/services/wifi_standard/ipc_framework/cRPC/include",
  "//foundation/communication/wifi/services/wifi_standard/wifi_hal",
  "//foundation/communication/wifi/services/wifi_standard/wifi_hal/common",
  "//foundation/communication/wifi/services/wifi_standard/wifi_hal/wifi_hal_module/hostapd_hal",
  "//foundation/communication/wifi/services/wifi_standard/wifi_hal/wifi_hal_module/wpa_supplicant_hal",
  "//foundation/communication/wifi/services/wifi_standard/wifi_hal/wifi_hal_module/wpa_supplicant_hal/wpa_sta_hal",
  "//foundation/communication/wifi/services/wifi_standard/wifi_hal/wifi_hal_module/wpa_supplicant_hal/wpa_p2p_hal",
]

if (defined(ohos_lite)) {
  executable("wifi_hal_service") {
    sources = local_base_sources

    include_dirs = local_base_include_dirs
    include_dirs += [
      "//base/hiviewdfx/hilog_lite/interfaces/native/innerkits",
      "//third_party/bounds_checking_function/include",
      "//third_party/wpa_supplicant/wpa_supplicant-2.9/src",
    ]

    deps = [
      "//base/hiviewdfx/hilog_lite/frameworks/featured:hilog_shared",
      "//foundation/communication/wifi/services/wifi_standard/ipc_framework/cRPC:crpc_server",
      "//foundation/communication/wifi/services/wifi_standard/wifi_hal/etc/init:etc",
      "//third_party/bounds_checking_function:libsec_shared",
      "//third_party/wpa_supplicant/wpa_supplicant-2.9:wpa_supplicant",
    ]

    cflags_cc = [ "-fno-rtti" ]
    defines = [ "OHOS_ARCH_LITE" ]
    ldflags = [ "-lwpa_client" ]
  }
} else {
  ohos_executable("wifi_hal_service") {
    install_enable = true
    sources = local_base_sources
    include_dirs = local_base_include_dirs
    include_dirs += [
      "//utils/native/base/include",
      "//base/hiviewdfx/hilog/interfaces/native/innerkits/include",
      "//third_party/wpa_supplicant/wpa_supplicant-2.9_standard/src/",
      "//third_party/bounds_checking_function/include/",
    ]

    deps = [
      "//base/hiviewdfx/hilog/interfaces/native/innerkits:libhilog",
      "//foundation/communication/wifi/services//wifi_standard/wifi_hal/etc/init:etc",
      "//foundation/communication/wifi/services/wifi_standard/ipc_framework/cRPC:crpc_server",
      "//third_party/wpa_supplicant/wpa_supplicant-2.9_standard:wpa_client",
      "//utils/native/base:utils",
    ]

    cflags_cc = [ "-fno-rtti" ]

    defines = []

    part_name = "wifi_standard"
    subsystem_name = "communication"
  }
}

group("wifi_hal") {
  deps = [ ":wifi_hal_service" ]
}
