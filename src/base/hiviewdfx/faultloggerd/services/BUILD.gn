# Copyright (c) 2021-2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//base/hiviewdfx/faultloggerd/faultloggerd.gni")

if (defined(ohos_lite)) {
  copy("faultlogger.cfg") {
    sources = [ "$faultloggerd_path/services/config/faultloggerd.cfg" ]
    outputs = [ "$root_out_dir/etc/init/faultloggerd.cfg" ]
  }

  copy("faultlogger.conf") {
    sources = [ "$faultloggerd_path/services/config/faultlogger.conf" ]
    outputs = [ "$root_out_dir/etc/faultlogger.conf" ]
  }

  executable("faultloggerd") {
    visibility = [ "*:*" ]

    include_dirs = [
      ".",
      "$faultloggerd_path/utils",
      "//utils/native/base/include",
      "$faultloggerd_path/common",
      "$faultloggerd_path/tools/process_dump",
      "$hilog_lite_include_path",
      "$faultloggerd_path/interfaces/innerkits/faultloggerd_client/include",
    ]

    sources = [
      "//base/hiviewdfx/faultloggerd/tools/process_dump/dfx_log.cpp",
      "//base/hiviewdfx/faultloggerd/utils/directory_ex.cpp",
      "fault_logger_config.cpp",
      "fault_logger_daemon.cpp",
      "fault_logger_secure.cpp",
      "main.cpp",
    ]

    deps = [
      ":faultlogger.conf",
      "$faultloggerd_path/interfaces/innerkits/faultloggerd_client:libfaultloggerd",
      "//base/hiviewdfx/hilog_lite/frameworks/featured:hilog_shared",
    ]
  }
} else {
  config("faultloggerd_config") {
    visibility = [ ":*" ]

    include_dirs = [
      ".",
      "//utils/native/base/include",
      "$faultloggerd_path/common",
      "$faultloggerd_path/tools/process_dump",
    ]
  }

  ohos_prebuilt_etc("faultloggerd.cfg") {
    source = "config/faultloggerd.cfg"

    relative_install_dir = "init"
    part_name = "faultloggerd"
    subsystem_name = "hiviewdfx"
  }

  ohos_prebuilt_etc("faultlogger.conf") {
    source = "config/faultlogger.conf"
    part_name = "faultloggerd"
    subsystem_name = "hiviewdfx"
  }

  ohos_executable("faultloggerd") {
    install_enable = true
    configs = [ ":faultloggerd_config" ]
    sources = [
      "//base/hiviewdfx/faultloggerd/tools/process_dump/dfx_log.cpp",
      "fault_logger_config.cpp",
      "fault_logger_daemon.cpp",
      "fault_logger_secure.cpp",
      "main.cpp",
    ]

    deps = [
      ":faultlogger.conf",
      "$faultloggerd_path/interfaces/innerkits/faultloggerd_client:libfaultloggerd",
    ]

    if (!is_asan) {
      deps += [ ":faultloggerd.cfg" ]
    }

    external_deps = [
      "hilog_native:libhilog",
      "utils_base:utils",
    ]
    install_images = [
      "system",
      "updater",
    ]
    part_name = "faultloggerd"
    subsystem_name = "hiviewdfx"
  }
}
